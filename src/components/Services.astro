---
import SectionTitle from './SectionTitle.astro';

export interface Props {
  title?: string;
  subtitle?: string;
  backgroundColor?: string;
  services?: Array<{
    title: string;
    description?: string;
    href?: string;
    features?: string[];
    price?: string;
    content?: string | string[];
    bulletStyle?: 'none' | 'check' | 'arrow';
  }>;
  sections?: Array<{
    title: string;
    content?: string;
    items?: Array<{ label: string; value?: string }>;
    footer?: string;
  }>;
  categories?: Array<{
    badge: string;
    title: string;
    thresholds?: Array<{ label: string; value: string }>;
    requirementsTitle?: string;
    requirements: string[];
  }>;
  columns?: 2 | 3 | 4;
  variant?: 'grid' | 'cards' | 'list' | 'categories' | 'presentation' | 'highlight';
  highlightTitle?: string;
  highlightContent?: string;
  highlightNote?: string;
}

const {
  title,
  subtitle,
  backgroundColor,
  services = [],
  sections = [],
  categories = [],
  columns = 3,
  variant = services.length > 0 ? 'grid' : sections.length > 0 ? 'list' : 'categories',
  highlightTitle,
  highlightContent,
  highlightNote
} = Astro.props;
---

<section class={`services variant-${variant}`} style={backgroundColor ? `background-color: ${backgroundColor};` : ''}>
  {(title || subtitle) && (
    <SectionTitle 
      title={title}
      subtitle={subtitle}
    />
  )}
  
  <div class="container">
    <div class={`grid grid-${columns}`}>
      {(variant === 'grid' || variant === 'cards') && services.map((service, index) => {
        const Wrapper = service.href ? 'a' : 'div';
        const wrapperProps = service.href ? { href: service.href } : {};
        
        return (
          <Wrapper class="card" {...wrapperProps} aria-label={`Service ${index + 1}: ${service.title}`}>
            <div class="card-icon" aria-label={`Service numéro ${index + 1}`}>
              <span aria-hidden="true">{index + 1}</span>
            </div>
            <h3>{service.title}</h3>
            {service.description && <p>{service.description}</p>}
            {variant === 'cards' && service.features && (
              <ul class="features" role="list">
                {service.features.map((feature) => (
                  <li role="listitem">{feature}</li>
                ))}
              </ul>
            )}
            {variant === 'cards' && service.price && (
              <span class="price" aria-label={`Prix: ${service.price}`}>{service.price}</span>
            )}
          </Wrapper>
        );
      })}
      
      {variant === 'list' && sections.map((section) => (
        <div class="card">
          <h3>{section.title}</h3>
          {section.content && <p>{section.content}</p>}
          {section.items && section.items.length > 0 && (
            <ul class="list">
              {section.items.map(item => (
                <li>
                  <span class="label">{item.label}</span>
                  {item.value && <span class="value">{item.value}</span>}
                </li>
              ))}
            </ul>
          )}
          {section.footer && (
            <div class="footer">{section.footer}</div>
          )}
        </div>
      ))}
      
      {variant === 'presentation' && services.map((service) => (
        <div class="card">
          <h3>{service.title}</h3>
          {Array.isArray(service.content) ? (
            <ul class={`content-list ${service.bulletStyle === 'check' ? 'bullet-check' : service.bulletStyle === 'arrow' ? 'bullet-arrow' : service.bulletStyle === 'none' ? 'bullet-none' : ''}`}>
              {service.content.map(item => (
                <li>{item}</li>
              ))}
            </ul>
          ) : (
            <p>{service.content || service.description}</p>
          )}
        </div>
      ))}
      
      {variant === 'highlight' && (
        <div class="highlight-box">
          <div class="highlight-content">
            {highlightTitle && <h3>{highlightTitle}</h3>}
            {highlightContent && <p>{highlightContent}</p>}
            {highlightNote && (
              <div class="highlight-note">
                <strong>Important :</strong> {highlightNote}
              </div>
            )}
          </div>
        </div>
      )}
      
      {variant === 'categories' && categories.map((category) => (
        <div class="card">
          <span class="badge">{category.badge}</span>
          <h3>{category.title}</h3>
          
          {category.thresholds && category.thresholds.length > 0 && (
            <div class="thresholds">
              {category.thresholds.map(threshold => (
                <div class="threshold">
                  <span class="label">{threshold.label}</span>
                  <span class="value">{threshold.value}</span>
                </div>
              ))}
            </div>
          )}
          
          {category.requirementsTitle && (
            <h4>{category.requirementsTitle}</h4>
          )}
          
          {category.requirements && category.requirements.length > 0 && (
            <ul class="list">
              {category.requirements.map(req => (
                <li>{req}</li>
              ))}
            </ul>
          )}
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .services {
    padding: 140px 20px 160px;
    background: var(--bg);
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }
  
  .grid {
    display: grid;
    gap: 40px;
    row-gap: 48px;
    width: 100%;
  }
  
  .grid-2 {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .grid-3 {
    grid-template-columns: repeat(3, 1fr);
  }
  
  .grid-4 {
    grid-template-columns: repeat(4, 1fr);
  }
  
  .card {
    padding: 48px;
    background: var(--bg-secondary);
    border: 1px solid var(--card-border);
    border-radius: 8px;
    text-decoration: none;
    color: inherit;
    display: block;
    transition: all 0.2s ease;
    box-shadow: var(--shadow-sm);
  }
  
  .card:hover {
    background: var(--bg-secondary);
    border-color: var(--muted);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }
  
  .card h3 {
    font-size: var(--font-h3);
    font-weight: 600;
    margin: 0 0 24px 0;
    color: var(--accent);
    line-height: 1.3;
    letter-spacing: -0.01em;
  }
  
  a.card:hover h3 {
    color: var(--accent-hover);
  }
  
  .card p {
    font-size: var(--font-body);
    line-height: 1.8;
    color: var(--fg-secondary);
    margin: 0 0 16px 0;
  }
  
  .card p:last-child {
    margin-bottom: 0;
  }
  
  .card-icon {
    width: 56px;
    height: 56px;
    background: var(--accent);
    color: var(--bg);
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--font-h3);
    font-weight: 600;
    margin-bottom: 28px;
    box-shadow: var(--shadow-sm);
  }
  
  .badge {
    display: inline-block;
    background: var(--badge-bg);
    color: var(--badge-fg);
    padding: 4px 8px;
    border-radius: 2px;
    font-size: var(--font-h6);
    font-weight: 600;
    margin-bottom: 8px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .list {
    list-style: none;
    padding: 0;
    margin: 24px 0 0 0;
  }
  
  .list li {
    padding: 14px 0;
    border-bottom: 1px solid var(--card-border);
    font-size: var(--font-body);
    color: var(--fg-secondary);
    line-height: 1.7;
  }
  
  .list li:last-child {
    border-bottom: none;
  }
  
  .label {
    font-weight: 600;
    color: var(--badge-fg);
    margin-right: 8px;
  }
  
  .value {
    color: var(--muted);
  }
  
  .footer {
    margin-top: 24px;
    padding-top: 20px;
    border-top: 1px solid var(--card-border);
    font-size: var(--font-h5);
    color: var(--muted);
    line-height: 1.6;
  }
  
  .thresholds {
    background: var(--bg);
    padding: 20px;
    margin: 24px 0;
    border-radius: 8px;
    border: 1px solid var(--card-border);
  }
  
  .threshold {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 0;
  }
  
  .threshold:not(:last-child) {
    border-bottom: 1px solid var(--card-border);
  }
  
  .threshold .label {
    font-size: var(--font-h6);
    color: var(--muted);
  }
  
  .threshold .value {
    font-size: var(--font-h6);
    font-weight: 600;
    color: var(--fg);
  }
  
  h4 {
    font-size: var(--font-h4);
    font-weight: 600;
    color: var(--fg);
    margin: 24px 0 16px 0;
  }
  
  .features {
    list-style: none;
    padding: 0;
    margin: 20px 0 24px 0;
  }
  
  .features li {
    position: relative;
    padding-left: 28px;
    margin-bottom: 14px;
    font-size: var(--font-body);
    color: var(--fg-secondary);
    line-height: 1.6;
  }
  
  .features li::before {
    content: '✓';
    position: absolute;
    left: 0;
    color: var(--success);
    font-weight: 600;
  }
  
  .price {
    display: inline-block;
    margin-top: 12px;
    padding: 6px 12px;
    background: var(--badge-bg);
    border-radius: 2px;
    font-size: var(--font-h5);
    font-weight: 600;
    color: var(--badge-fg);
  }
  
  .content-list {
    list-style: none;
    padding: 0;
    margin: 20px 0 0 0;
    width: 100%;
  }
  
  .content-list li {
    position: relative;
    padding: 20px 0 20px 40px;
    border-bottom: 1px solid var(--card-border);
    font-size: var(--font-body);
    color: var(--fg-secondary);
    line-height: 1.8;
    text-align: left;
  }
  
  .content-list li:last-child {
    border-bottom: none;
  }
  
  .content-list li::before {
    content: '→';
    position: absolute;
    left: 12px;
    color: var(--accent);
    font-weight: 600;
  }
  
  .bullet-check li::before {
    content: '✓';
    color: var(--success, #22c55e);
  }
  
  .bullet-arrow li::before {
    content: '→';
    color: var(--accent);
  }
  
  .bullet-none li {
    padding-left: 0;
  }
  
  .bullet-none li::before {
    display: none;
  }
  
  .highlight-box {
    grid-column: 1 / -1;
    padding: 48px;
    background: var(--bg-secondary);
    border: 1px solid var(--card-border);
    border-left: 4px solid var(--accent);
    border-radius: 8px;
    box-shadow: var(--shadow-sm);
  }
  
  .highlight-content h3 {
    font-size: var(--font-h3);
    font-weight: 600;
    color: var(--accent);
    margin: 0 0 24px 0;
    line-height: 1.3;
    letter-spacing: -0.01em;
  }
  
  .highlight-content p {
    font-size: var(--font-body);
    color: var(--fg-secondary);
    line-height: 1.8;
    margin: 0 0 24px 0;
  }
  
  .highlight-note {
    padding: 20px;
    background: var(--bg);
    border-left: 3px solid var(--accent);
    border-radius: 6px;
    font-size: var(--font-h5);
    color: var(--fg);
    line-height: 1.6;
  }
  
  .highlight-note strong {
    font-weight: 600;
    color: var(--accent);
  }
  
  @media (max-width: 1024px) {
    .grid-4 {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (max-width: 768px) {
    .services {
      padding: 100px 20px 120px;
    }
    .container {
      padding: 0 16px;
    }
    
    .card {
      padding: 36px;
    }
    
    .grid {
      gap: 28px;
      row-gap: 36px;
    }
    
    .grid-2,
    .grid-3,
    .grid-4 {
      grid-template-columns: 1fr;
    }
  }
  
  /* Variant-specific styles */
  .variant-presentation .grid {
    grid-template-columns: 1fr;
    max-width: 900px;
    margin: 0 auto;
  }
  
  .variant-presentation .card {
    background: transparent;
    border: none;
    box-shadow: none;
    padding: 32px 0;
    border-bottom: 1px solid var(--card-border);
  }
  
  .variant-presentation .card:last-child {
    border-bottom: none;
  }
  
  .variant-list .grid {
    grid-template-columns: 1fr;
    max-width: 900px;
    margin: 0 auto;
  }
  
  .variant-list .card {
    margin-bottom: 24px;
  }
  
  .variant-categories .grid {
    max-width: 1000px;
    margin: 0 auto;
  }
  
  .thresholds {
    background: var(--bg);
    padding: 16px;
    border-radius: 6px;
    margin: 16px 0;
  }
  
  .threshold {
    display: flex;
    justify-content: space-between;
    padding: 8px 0;
    border-bottom: 1px solid var(--card-border);
  }
  
  .threshold:last-child {
    border-bottom: none;
  }
  
  .card h4 {
    font-size: var(--font-h5);
    font-weight: 600;
    color: var(--accent);
    margin: 24px 0 16px 0;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  @media (max-width: 480px) {
    .services {
      padding: 80px 16px 100px;
    }
    
    .card {
      padding: 32px;
    }
  }
</style>
