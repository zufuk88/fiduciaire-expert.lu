---
export interface Props {
  title?: string;
  subtitle?: string;
  faqItems: Array<{
    question: string;
    answer: string;
  }>;
  generateSchema?: boolean;
}

const {
  title = "Questions Fréquentes",
  subtitle = "Les réponses claires à vos interrogations les plus courantes",
  faqItems,
  generateSchema = true
} = Astro.props;

// Génération du schéma si demandé
const faqSchema = generateSchema ? {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": faqItems.map(item => ({
    "@type": "Question",
    "name": item.question,
    "acceptedAnswer": {
      "@type": "Answer",
      "text": item.answer
    }
  }))
} : null;
---

<section class="faq-section">
  <div class="container">
    <div class="faq-card">
      <h2 class="faq-title">{title}</h2>
      {subtitle && <p class="faq-subtitle">{subtitle}</p>}
      
      <div class="accordion">
        {faqItems.map((item) => (
          <details class="item">
            <summary class="question">
              <span>{item.question}</span>
              <span class="icon">+</span>
            </summary>
            <div class="answer">
              <p>{item.answer}</p>
            </div>
          </details>
        ))}
      </div>
    </div>
  </div>
  
  {generateSchema && faqSchema && (
    <script type="application/ld+json" set:html={JSON.stringify(faqSchema)} is:inline />
  )}
</section>

<style>
  .faq-section {
    padding: var(--section-padding);
    width: 100%;
  }

  .container {
    max-width: 800px;
    margin: 0 auto;
  }

  .faq-card {
    background: var(--white);
    border-radius: 12px;
    padding: var(--card-padding);
    box-shadow: 0 2px 8px var(--card-shadow-hover);
  }

  .faq-title {
    font-family: var(--font-family);
    font-size: var(--card-title);
    font-weight: 500;
    color: var(--accent);
    text-align: center;
    margin-bottom: 16px;
  }

  .faq-subtitle {
    font-family: var(--font-family);
    font-size: var(--card-subtitle);
    color: var(--fg-secondary);
    text-align: center;
    margin-bottom: 48px;
    line-height: 1.6;
  }

  .accordion {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .item {
    background: var(--card-bg-light);
    border-radius: 8px;
    border: 1px solid var(--card-border);
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .item:hover {
    border-color: var(--accent);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px var(--card-shadow-hover);
  }

  .item[open] {
    background: var(--white);
    border-color: var(--accent);
  }

  .question {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    padding: 24px 30px;
    cursor: pointer;
    font-family: var(--font-family);
    font-size: var(--text-lg);
    font-weight: 600;
    color: var(--fg);
    line-height: 1.4;
    transition: all 0.3s ease;
  }

  .question::-webkit-details-marker {
    display: none;
  }

  .question:hover {
    color: var(--accent);
  }

  .icon {
    font-size: var(--icon-size);
    font-weight: 300;
    color: var(--accent);
    transition: all 0.3s ease;
    min-width: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .item[open] .icon {
    transform: rotate(45deg);
  }

  .answer {
    padding: 0 30px 24px 30px;
    margin-top: -8px;
  }

  .answer p {
    font-family: var(--font-family);
    font-size: var(--text-base);
    line-height: 1.7;
    color: var(--fg-secondary);
    margin: 0;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .faq-section {
      padding: var(--section-padding-tablet);
    }

    .faq-card {
      padding: var(--card-padding-tablet);
    }

    .faq-title {
      font-size: var(--card-title-mobile);
    }

    .faq-subtitle {
      font-size: var(--card-subtitle-mobile);
      margin-bottom: 36px;
    }

    .question {
      padding: 20px 24px;
      font-size: var(--text-base);
    }

    .answer {
      padding: 0 24px 20px 24px;
    }
    
    .icon {
      font-size: var(--icon-size);
      min-width: 24px;
    }

    .answer p {
      font-size: var(--text-base-mobile);
    }
  }

  @media (max-width: 480px) {
    .faq-section {
      padding: var(--section-padding-mobile);
    }
    
    .faq-card {
      padding: var(--card-padding-mobile);
    }
    
    .question {
      padding: 18px 20px;
      font-size: var(--text-base-mobile);
    }

    .answer {
      padding: 0 20px 18px 20px;
    }

    .answer p {
      font-size: var(--text-sm);
    }
  }
</style>

<script>
  // Fermer les autres items quand on en ouvre un
  document.addEventListener('DOMContentLoaded', () => {
    const items = document.querySelectorAll('.item');
    
    items.forEach(item => {
      item.addEventListener('toggle', (e) => {
        if (item.hasAttribute('open')) {
          // Fermer les autres
          items.forEach(other => {
            if (other !== item && other.hasAttribute('open')) {
              other.removeAttribute('open');
            }
          });
        }
      });
    });
  });
</script>