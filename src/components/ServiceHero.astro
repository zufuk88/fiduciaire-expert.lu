---
export interface Props {
  title: string;
  subtitle: string;
  description?: string;
  icon?: string;
  stats?: Array<{
    value: string;
    label: string;
  }>;
  primaryButton?: {
    text: string;
    href: string;
  };
  secondaryButton?: {
    text: string;
    href: string;
  };
  variant?: 'default' | 'minimal' | 'centered';
}

const { 
  title, 
  subtitle, 
  description,
  icon,
  stats = [],
  primaryButton,
  secondaryButton,
  variant = 'default'
} = Astro.props;
---

<section class={`service-hero service-hero--${variant}`}>
  <div class="container">
    <div class="hero-content">
      <div class="hero-text">
        {icon && (
          <div class="hero-icon">
            <i class={icon}></i>
          </div>
        )}
        <h1 class="hero-title">{title}</h1>
        <p class="hero-subtitle">{subtitle}</p>
        {description && (
          <p class="hero-description">{description}</p>
        )}
        
        {(primaryButton || secondaryButton) && (
          <div class="hero-actions">
            {primaryButton && (
              <a href={primaryButton.href} class="btn btn-primary">
                {primaryButton.text}
              </a>
            )}
            {secondaryButton && (
              <a href={secondaryButton.href} class="btn btn-secondary">
                {secondaryButton.text}
              </a>
            )}
          </div>
        )}
      </div>
      
      {stats.length > 0 && (
        <div class="hero-stats">
          {stats.map(stat => (
            <div class="stat-item">
              <span class="stat-value">{stat.value}</span>
              <span class="stat-label">{stat.label}</span>
            </div>
          ))}
        </div>
      )}
    </div>
  </div>
</section>

<style>
  .service-hero {
    padding: 4rem 0;
    background: linear-gradient(135deg, #f8fafc 0%, #ffffff 100%);
    border-bottom: 1px solid #e5e7eb;
    position: relative;
    overflow: hidden;
  }

  .service-hero::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -10%;
    width: 50%;
    height: 200%;
    background: radial-gradient(circle, rgba(59, 130, 246, 0.05) 0%, transparent 70%);
    pointer-events: none;
  }

  .hero-content {
    position: relative;
    z-index: 1;
  }

  .hero-text {
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
  }

  .service-hero--default .hero-text {
    text-align: left;
    margin: 0;
  }

  .hero-icon {
    width: 64px;
    height: 64px;
    background: #3b82f6;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1.5rem;
  }

  .hero-icon i {
    font-size: 28px;
    color: white;
  }

  .service-hero--centered .hero-icon {
    margin: 0 auto 1.5rem;
  }

  .hero-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: #1e293b;
    margin-bottom: 1rem;
    line-height: 1.2;
  }

  .hero-subtitle {
    font-size: 1.25rem;
    color: #475569;
    margin-bottom: 1rem;
    font-weight: 500;
  }

  .hero-description {
    font-size: 1rem;
    color: #64748b;
    line-height: 1.7;
    margin-bottom: 2rem;
  }

  .hero-actions {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
  }

  .service-hero--centered .hero-actions {
    justify-content: center;
  }

  .btn {
    padding: 0.75rem 1.75rem;
    border-radius: 6px;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s;
    display: inline-block;
  }

  .btn-primary {
    background: #3b82f6;
    color: white;
  }

  .btn-primary:hover {
    background: #2563eb;
    transform: translateY(-2px);
  }

  .btn-secondary {
    background: white;
    color: #3b82f6;
    border: 2px solid #3b82f6;
  }

  .btn-secondary:hover {
    background: #f0f9ff;
  }

  .hero-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 2rem;
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #e5e7eb;
  }

  .stat-item {
    text-align: center;
  }

  .stat-value {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    color: #3b82f6;
    margin-bottom: 0.25rem;
  }

  .stat-label {
    display: block;
    font-size: 0.875rem;
    color: #64748b;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

    
    .hero-title {
      color: #f1f5f9;
    }
    
    .hero-subtitle {
      color: #cbd5e1;
    }
    
    .hero-description {
      color: #94a3b8;
    }
    
    .btn-secondary {
      background: #1e293b;
      border-color: #3b82f6;
    }
    
    .btn-secondary:hover {
      background: #334155;
    }
    
    .hero-stats {
      border-top-color: #334155;
    }
    
    .stat-label {
      color: #94a3b8;
    }
  }

  /* Responsive */
  @media (max-width: 768px) {
    .service-hero {
      padding: 3rem 0;
    }
    
    .hero-title {
      font-size: 2rem;
    }
    
    .hero-subtitle {
      font-size: 1.125rem;
    }
    
    .hero-actions {
      flex-direction: column;
    }
    
    .hero-stats {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
  }
</style>