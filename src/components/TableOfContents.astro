---
export interface Props {
  headings: Array<{
    depth: number;
    text: string;
    slug: string;
  }>;
  lang?: 'fr' | 'en';
}
const { headings, lang = 'fr' } = Astro.props;
// Filtrer seulement les h2 et h3 pour la table des matières
const tocHeadings = headings.filter(heading => heading.depth === 2 || heading.depth === 3);
const title = lang === 'fr' ? 'Table des matières' : 'Table of Contents';
---
{tocHeadings.length > 2 && (
  <nav class="table-of-contents" aria-label={title}>
    <h3 class="toc-title">{title}</h3>
    <ul class="toc-list">
      {tocHeadings.map((heading) => (
        <li class={`toc-item toc-level-${heading.depth}`}>
          <a href={`#${heading.slug}`} class="toc-link" data-toc-link>
            {heading.text}
          </a>
        </li>
      ))}
    </ul>
  </nav>
)}
<style>
  .table-of-contents {
    background: #fafbfc;
    border: 1px solid #e5e7eb;
    border-radius: 2px;
    padding: 32px;
    margin-bottom: 0;
    max-height: calc(100vh - 220px); /* Viewport height - header - sticky bar - spacing */
    display: flex;
    flex-direction: column;
  }
  .toc-title {
    font-size: 14px;
    font-weight: 600;
    color: #1e3a5f;
    margin-bottom: 20px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    flex-shrink: 0;
  }
  .toc-list {
    list-style: none;
    margin: 0;
    padding: 0;
    overflow-y: auto;
    overflow-x: hidden;
    padding-right: 8px; /* Space for scrollbar */
  }
  .toc-item {
    margin: 0;
    padding: 0;
  }
  .toc-level-3 {
    margin-left: 20px;
  }
  .toc-link {
    display: block;
    padding: 10px 0;
    color: #525252;
    text-decoration: none;
    font-size: 14px;
    line-height: 1.5;
    border-left: 2px solid transparent;
    padding-left: 12px;
    margin-left: -12px;
    white-space: normal;
    word-wrap: break-word;
    transition: all 0.2s ease;
  }
  .toc-link:hover {
    color: #1e3a5f;
    border-left-color: #e5e7eb;
    background: #ffffff;
    padding-left: 16px;
  }
  .toc-link.active {
    color: #1e3a5f;
    font-weight: 600;
    border-left-color: #1e3a5f;
    background: #ffffff;
  }
  /* Scrollbar styles */
  .toc-list::-webkit-scrollbar {
    width: 4px;
  }
  .toc-list::-webkit-scrollbar-track {
    background: transparent;
  }
  .toc-list::-webkit-scrollbar-thumb {
    background: #e5e7eb;
    border-radius: 2px;
  }
  .toc-list::-webkit-scrollbar-thumb:hover {
    background: #9ca3af;
  }
  /* Firefox scrollbar */
  .toc-list {
    scrollbar-width: thin;
    scrollbar-color: #e5e7eb transparent;
  }
  /* Fade effect at bottom when scrollable */
  .table-of-contents::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 24px;
    background: linear-gradient(to top, #fafbfc, transparent);
    pointer-events: none;
    opacity: 0;
  }
  .table-of-contents.has-scroll::after {
    opacity: 1;
  }
  /* Mobile styles */
  @media (max-width: 1200px) {
    .table-of-contents {
      position: static;
      margin-bottom: 2rem;
      max-height: none;
    }
  }
  @media (max-width: 768px) {
    .table-of-contents {
      padding: 24px;
    }
    .toc-title {
      font-size: 13px;
    }
    .toc-link {
      font-size: 13px;
      padding: 8px 0;
    }
  }

  /* Support du mode sombre */
  @media (prefers-color-scheme: dark) {
    .table-of-contents {
      background: #1e293b;
      border-color: #334155;
    }

    .table-of-contents::after {
      background: linear-gradient(to top, #1e293b, transparent);
    }

    .toc-title {
      color: #f1f5f9;
    }

    .toc-link {
      color: #94a3b8;
    }

    .toc-link:hover {
      color: #f1f5f9;
      border-left-color: #475569;
      background: #263449;
    }

    .toc-link.active {
      color: #60a5fa;
      border-left-color: #60a5fa;
      background: #263449;
      font-weight: 600;
    }

    .toc-list::-webkit-scrollbar-thumb {
      background: #334155;
    }

    .toc-list::-webkit-scrollbar-thumb:hover {
      background: #475569;
    }

    .toc-list {
      scrollbar-color: #334155 transparent;
    }
  }

  /* Support du mode sombre avec classe sur body */
  :global(body.dark) .table-of-contents {
    background: #1e293b;
    border-color: #334155;
  }

  :global(body.dark) .table-of-contents::after {
    background: linear-gradient(to top, #1e293b, transparent);
  }

  :global(body.dark) .toc-title {
    color: #f1f5f9;
  }

  :global(body.dark) .toc-link {
    color: #94a3b8;
  }

  :global(body.dark) .toc-link:hover {
    color: #f1f5f9;
    border-left-color: #475569;
    background: #263449;
  }

  :global(body.dark) .toc-link.active {
    color: #60a5fa;
    border-left-color: #60a5fa;
    background: #263449;
    font-weight: 600;
  }

  :global(body.dark) .toc-list::-webkit-scrollbar-thumb {
    background: #334155;
  }

  :global(body.dark) .toc-list::-webkit-scrollbar-thumb:hover {
    background: #475569;
  }

  :global(body.dark) .toc-list {
    scrollbar-color: #334155 transparent;
  }

  /* Support du mode sombre avec attribut data-theme */
  :global([data-theme="dark"]) .table-of-contents {
    background: #1e293b;
    border-color: #334155;
  }

  :global([data-theme="dark"]) .table-of-contents::after {
    background: linear-gradient(to top, #1e293b, transparent);
  }

  :global([data-theme="dark"]) .toc-title {
    color: #f1f5f9;
  }

  :global([data-theme="dark"]) .toc-link {
    color: #94a3b8;
  }

  :global([data-theme="dark"]) .toc-link:hover {
    color: #f1f5f9;
    border-left-color: #475569;
    background: #263449;
  }

  :global([data-theme="dark"]) .toc-link.active {
    color: #60a5fa;
    border-left-color: #60a5fa;
    background: #263449;
    font-weight: 600;
  }

  :global([data-theme="dark"]) .toc-list::-webkit-scrollbar-thumb {
    background: #334155;
  }

  :global([data-theme="dark"]) .toc-list::-webkit-scrollbar-thumb:hover {
    background: #475569;
  }

  :global([data-theme="dark"]) .toc-list {
    scrollbar-color: #334155 transparent;
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const tocLinks = document.querySelectorAll('[data-toc-link]');
    const headings = document.querySelectorAll('.article-content h2, .article-content h3');
    const tocElement = document.querySelector('.table-of-contents');
    const tocList = document.querySelector('.toc-list');
    if (tocLinks.length === 0 || headings.length === 0) return;
    // Check if scrollbar is needed and add fade effect
    if (tocList && tocElement) {
      const checkScroll = () => {
        if (tocList.scrollHeight > tocList.clientHeight) {
          tocElement.classList.add('has-scroll');
        } else {
          tocElement.classList.remove('has-scroll');
        }
      };
      checkScroll();
      window.addEventListener('resize', checkScroll);
    }
    // Intersection Observer pour mettre en évidence le heading actuel
    const observerOptions = {
      rootMargin: '-20% 0px -70% 0px',
      threshold: 0
    };
    let activeLink: Element | null = null;
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          // Retirer la classe active de tous les liens
          tocLinks.forEach(link => link.classList.remove('active'));
          // Trouver et activer le lien correspondant
          const targetId = entry.target.getAttribute('id');
          const correspondingLink = document.querySelector(`[href="#${targetId}"]`);
          if (correspondingLink) {
            correspondingLink.classList.add('active');
            activeLink = correspondingLink;
            // Auto-scroll ToC to show active item
            if (tocList) {
              const linkRect = correspondingLink.getBoundingClientRect();
              const listRect = tocList.getBoundingClientRect();
              const linkTop = linkRect.top - listRect.top + tocList.scrollTop;
              const linkBottom = linkTop + linkRect.height;
              if (linkTop < tocList.scrollTop) {
                tocList.scrollTo({
                  top: linkTop - 20,
                  behavior: 'smooth'
                });
              } else if (linkBottom > tocList.scrollTop + tocList.clientHeight) {
                tocList.scrollTo({
                  top: linkBottom - tocList.clientHeight + 20,
                  behavior: 'smooth'
                });
              }
            }
          }
        }
      });
    }, observerOptions);
    // Observer tous les headings
    headings.forEach(heading => {
      if (heading.id) {
        observer.observe(heading);
      }
    });
    // Smooth scroll pour les liens
    tocLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        const targetId = link.getAttribute('href')?.substring(1);
        const targetElement = document.getElementById(targetId || '');
        if (targetElement) {
          const headerOffset = 100; // Hauteur du header sticky
          const elementPosition = targetElement.getBoundingClientRect().top;
          const offsetPosition = elementPosition + window.pageYOffset - headerOffset;
          window.scrollTo({
            top: offsetPosition,
            behavior: 'smooth'
          });
        }
      });
    });
  });
</script>