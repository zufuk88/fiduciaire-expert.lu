---
export interface ProcessStep {
  number?: string;
  title: string;
  description: string;
  icon?: string;
  duration?: string;
  highlight?: boolean;
}

export interface Props {
  steps: ProcessStep[];
  variant?: 'timeline' | 'cards' | 'numbered';
}

const { 
  steps,
  variant = 'timeline'
} = Astro.props;
---

<section class="service-process">
  <div class="container">
    <div class={`process-steps process-steps--${variant}`}>
      {steps.map((step, index) => (
        <div class={`process-step ${step.highlight ? 'is-highlighted' : ''}`}>
          <div class="step-marker">
            {step.icon ? (
              <i class={step.icon}></i>
            ) : (
              <span class="step-number">{step.number || (index + 1)}</span>
            )}
          </div>
          
          <div class="step-content">
            <h3 class="step-title">{step.title}</h3>
            <p class="step-description">{step.description}</p>
            {step.duration && (
              <span class="step-duration">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                  <path d="M8 4V8L10.5 10.5M14 8C14 11.3137 11.3137 14 8 14C4.68629 14 2 11.3137 2 8C2 4.68629 4.68629 2 8 2C11.3137 2 14 4.68629 14 8Z" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                {step.duration}
              </span>
            )}
          </div>
          
          {variant === 'timeline' && index < steps.length - 1 && (
            <div class="step-connector" aria-hidden="true"></div>
          )}
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .service-process {
    padding: 4rem 0;
    background: #f8fafc;
  }

  /* Timeline variant */
  .process-steps--timeline {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
  }

  .process-steps--timeline .process-step {
    display: flex;
    gap: 1.5rem;
    position: relative;
    padding-bottom: 3rem;
  }

  .process-steps--timeline .process-step:last-child {
    padding-bottom: 0;
  }

  .step-connector {
    position: absolute;
    left: 23px;
    top: 48px;
    width: 2px;
    height: calc(100% - 24px);
    background: #e2e8f0;
  }

  /* Cards variant */
  .process-steps--cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .process-steps--cards .process-step {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    transition: all 0.3s;
  }

  .process-steps--cards .process-step:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
  }

  .process-steps--cards .step-marker {
    margin-bottom: 1rem;
  }

  /* Numbered variant */
  .process-steps--numbered {
    display: grid;
    gap: 1.5rem;
  }

  .process-steps--numbered .process-step {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 1.5rem;
    padding: 1.5rem;
    background: white;
    border-radius: 8px;
    border: 1px solid #e2e8f0;
  }

  /* Common styles */
  .step-marker {
    width: 48px;
    height: 48px;
    background: #3b82f6;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
  }

  .step-marker i {
    color: white;
    font-size: 20px;
  }

  .step-number {
    color: white;
    font-weight: 700;
    font-size: 1.125rem;
  }

  .process-step.is-highlighted .step-marker {
    background: #10b981;
  }

  .step-content {
    flex: 1;
  }

  .step-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 0.5rem;
  }

  .step-description {
    color: #64748b;
    line-height: 1.6;
    margin-bottom: 0.5rem;
  }

  .step-duration {
    display: inline-flex;
    align-items: center;
    gap: 0.375rem;
    font-size: 0.875rem;
    color: #94a3b8;
    margin-top: 0.5rem;
  }

  /* Dark mode */
  :global(body.dark) .service-process,
  :global([data-theme="dark"]) .service-process {
    background: #1e293b;
  }

  :global(body.dark) .process-steps--cards .process-step,
  :global([data-theme="dark"]) .process-steps--cards .process-step,
  :global(body.dark) .process-steps--numbered .process-step,
  :global([data-theme="dark"]) .process-steps--numbered .process-step {
    background: #0f172a;
    border-color: #334155;
  }

  :global(body.dark) .step-connector,
  :global([data-theme="dark"]) .step-connector {
    background: #334155;
  }

  :global(body.dark) .step-title,
  :global([data-theme="dark"]) .step-title {
    color: #f1f5f9;
  }

  :global(body.dark) .step-description,
  :global([data-theme="dark"]) .step-description {
    color: #94a3b8;
  }

  :global(body.dark) .step-duration,
  :global([data-theme="dark"]) .step-duration {
    color: #64748b;
  }

  @media (prefers-color-scheme: dark) {
    .service-process {
      background: #1e293b;
    }
    
    .process-steps--cards .process-step,
    .process-steps--numbered .process-step {
      background: #0f172a;
      border-color: #334155;
    }
    
    .step-connector {
      background: #334155;
    }
    
    .step-title {
      color: #f1f5f9;
    }
    
    .step-description {
      color: #94a3b8;
    }
    
    .step-duration {
      color: #64748b;
    }
  }

  /* Responsive */
  @media (max-width: 768px) {
    .service-process {
      padding: 3rem 0;
    }
    
    .process-steps--cards {
      grid-template-columns: 1fr;
    }
    
    .step-title {
      font-size: 1.125rem;
    }
  }
</style>