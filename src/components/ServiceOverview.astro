---
export interface Props {
  lead: string;
  content?: string;
  highlights?: string[];
  alert?: {
    type?: 'info' | 'warning' | 'important';
    title?: string;
    message: string;
  };
  image?: {
    src: string;
    alt: string;
  };
}

const { 
  lead, 
  content,
  highlights = [],
  alert,
  image
} = Astro.props;
---

<section class="service-overview">
  <div class="container">
    <div class="overview-content">
      <p class="overview-lead">{lead}</p>
      
      {content && (
        <div class="overview-text" set:html={content} />
      )}
      
      {highlights.length > 0 && (
        <div class="overview-highlights">
          <ul class="highlights-list">
            {highlights.map(item => (
              <li class="highlight-item">
                <svg class="highlight-icon" width="20" height="20" viewBox="0 0 20 20" fill="none">
                  <path d="M16.7071 5.29289C17.0976 5.68342 17.0976 6.31658 16.7071 6.70711L8.70711 14.7071C8.31658 15.0976 7.68342 15.0976 7.29289 14.7071L3.29289 10.7071C2.90237 10.3166 2.90237 9.68342 3.29289 9.29289C3.68342 8.90237 4.31658 8.90237 4.70711 9.29289L8 12.5858L15.2929 5.29289C15.6834 4.90237 16.3166 4.90237 16.7071 5.29289Z" fill="currentColor"/>
                </svg>
                <span>{item}</span>
              </li>
            ))}
          </ul>
        </div>
      )}
      
      {alert && (
        <div class={`overview-alert alert--${alert.type || 'info'}`}>
          <div class="alert-icon">
            {alert.type === 'warning' ? (
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M12 9V13M12 17H12.01M5.07183 19H18.9282C20.4678 19 21.4301 17.3333 20.6603 16L13.7321 4C12.9623 2.66667 11.0377 2.66667 10.2679 4L3.33975 16C2.56995 17.3333 3.53223 19 5.07183 19Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            ) : (
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M13 16H12V12H11M12 8H12.01M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            )}
          </div>
          <div class="alert-content">
            {alert.title && <strong class="alert-title">{alert.title}</strong>}
            <span class="alert-message">{alert.message}</span>
          </div>
        </div>
      )}
      
      {image && (
        <div class="overview-image">
          <img src={image.src} alt={image.alt} loading="lazy" />
        </div>
      )}
    </div>
  </div>
</section>

<style>
  .service-overview {
    padding: 4rem 0;
    background: var(--bg);
  }

  .overview-content {
    max-width: 900px;
    margin: 0 auto;
  }

  .overview-lead {
    font-size: 1.25rem;
    line-height: 1.7;
    color: var(--fg-secondary);
    margin-bottom: 2rem;
    font-weight: 500;
  }

  .overview-text {
    font-size: 1rem;
    line-height: 1.8;
    color: var(--muted);
    margin-bottom: 2rem;
  }

  .overview-text :global(p) {
    margin-bottom: 1rem;
  }

  .overview-text :global(p:last-child) {
    margin-bottom: 0;
  }

  .overview-highlights {
    background: var(--bg-secondary);
    border-radius: 12px;
    padding: 2rem;
    margin: 2rem 0;
  }

  .highlights-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    gap: 1rem;
  }

  .highlight-item {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
  }

  .highlight-icon {
    flex-shrink: 0;
    margin-top: 0.125rem;
    color: var(--success);
  }

  .highlight-item span {
    color: var(--fg);
    line-height: 1.6;
  }

  .overview-alert {
    display: flex;
    gap: 1rem;
    padding: 1.25rem;
    border-radius: 8px;
    margin: 2rem 0;
  }

  .alert--info {
    background: var(--info-bg);
    border: 1px solid var(--info);
  }

  .alert--info .alert-icon {
    color: var(--info);
  }

  .alert--warning {
    background: var(--warn-bg);
    border: 1px solid var(--warn);
  }

  .alert--warning .alert-icon {
    color: var(--warn);
  }

  .alert--important {
    background: var(--danger-bg);
    border: 1px solid var(--danger);
  }

  .alert--important .alert-icon {
    color: var(--danger);
  }

  .alert-icon {
    flex-shrink: 0;
  }

  .alert-content {
    flex: 1;
  }

  .alert-title {
    display: block;
    color: var(--fg);
    margin-bottom: 0.25rem;
  }

  .alert-message {
    color: var(--fg-secondary);
    line-height: 1.6;
  }

  .overview-image {
    margin-top: 3rem;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 10px 30px var(--card-shadow);
  }

  .overview-image img {
    width: 100%;
    height: auto;
    display: block;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .service-overview {
      padding: 3rem 0;
    }
    
    .overview-lead {
      font-size: 1.125rem;
    }
    
    .overview-highlights {
      padding: 1.5rem;
    }
  }
</style>