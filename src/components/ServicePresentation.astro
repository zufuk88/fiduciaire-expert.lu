---
export interface Props {
  title: string;
  subtitle?: string;
  backgroundColor?: string;
  boxBackgroundColor?: string;
  borderColor?: string;
  content?: string | string[];
  bulletStyle?: 'disc' | 'check' | 'arrow' | 'none';
  contentType?: 'paragraph' | 'bullets';
  maxWidth?: string;
}

const {
  title,
  subtitle,
  backgroundColor,
  boxBackgroundColor = '#fafbfc',
  borderColor = '#e2e8f0',
  content,
  bulletStyle = 'disc',
  contentType = 'bullets',
  maxWidth = '1200px'
} = Astro.props;

// Ensure content is an array if bullets are used
const contentItems = Array.isArray(content) ? content : (content ? [content] : []);
---

<section class="service-presentation" style={backgroundColor ? `background-color: ${backgroundColor};` : ''}>
  <div class="container" style={`max-width: ${maxWidth};`}>
    <!-- Header avec style BlogCarousel -->
    <div class="section-header">
      <h2>{title}</h2>
      {subtitle && <p class="subtitle">{subtitle}</p>}
    </div>
    
    <!-- Encart élégant -->
    <div class="info-box" style={`background-color: ${boxBackgroundColor}; border-color: ${borderColor};`}>
      {contentType === 'paragraph' ? (
        <div class="content-paragraph">
          {contentItems.map((item) => (
            <p set:html={item}></p>
          ))}
        </div>
      ) : (
        <ul class={`content-list bullet-${bulletStyle}`}>
          {contentItems.map((item) => (
            <li>
              {bulletStyle === 'check' && (
                <svg class="bullet-icon" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
              )}
              {bulletStyle === 'arrow' && (
                <svg class="bullet-icon" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                </svg>
              )}
              <span set:html={item}></span>
            </li>
          ))}
        </ul>
      )}
      
      <!-- Slot pour contenu personnalisé -->
      <slot />
    </div>
  </div>
</section>

<style>
  .service-presentation {
    padding: 5rem 0;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  /* Header avec style identique à ServicesSimple */
  .section-header {
    text-align: left;
    max-width: 800px;
    margin: 0 auto 4rem;
    position: relative;
    padding-left: 2rem;
  }

  .section-header h2 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: var(--color-dark, #0f172a);
    font-weight: 300;
    line-height: 1.2;
    letter-spacing: -0.02em;
    position: relative;
    padding-bottom: 1.5rem;
  }

  .section-header h2::after {
    content: '';
    display: block;
    width: 60px;
    height: 2px;
    background: var(--color-primary, #3b82f6);
    margin: 1.5rem 0 0;
    position: absolute;
    bottom: 0;
    left: 0;
    transform: none;
  }

  .section-header .subtitle {
    font-size: 1.25rem;
    color: var(--color-text-secondary, #64748b);
    line-height: 1.75;
    max-width: 600px;
    margin: 1rem 0 0 2.5rem;
    font-weight: 400;
    position: relative;
  }

  /* Encart élégant */
  .info-box {
    background-color: #fafbfc;
    border: 1px solid #e2e8f0;
    border-radius: 4px;
    padding: 2.5rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.04);
    transition: all 0.2s ease;
    position: relative;
    overflow: hidden;
  }

  .info-box:hover {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    transform: translateY(-1px);
  }

  /* Contenu paragraphe */
  .content-paragraph p {
    font-size: 1rem;
    line-height: 1.75;
    color: #64748b;
    margin-bottom: 1.25rem;
    font-weight: 400;
  }

  .content-paragraph p:last-child {
    margin-bottom: 0;
  }

  .content-paragraph strong {
    color: #334155;
    font-weight: 600;
  }

  /* Contenu liste */
  .content-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    gap: 1rem;
  }

  .content-list li {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    font-size: 1rem;
    line-height: 1.6;
    color: #64748b;
    position: relative;
  }

  /* Style disc par défaut */
  .content-list.bullet-disc li::before {
    content: "•";
    color: #3b82f6;
    font-weight: bold;
    font-size: 1.25rem;
    line-height: 1.2;
    flex-shrink: 0;
  }

  /* Style none - pas de bullet */
  .content-list.bullet-none li::before {
    display: none;
  }

  .content-list.bullet-none li {
    padding-left: 0;
  }

  /* Icons pour check et arrow */
  .bullet-icon {
    width: 20px;
    height: 20px;
    color: #3b82f6;
    flex-shrink: 0;
    margin-top: 0.125rem;
  }

  .content-list li span {
    flex: 1;
  }

  .content-list li strong {
    color: #334155;
    font-weight: 600;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .service-presentation {
      padding: 3rem 0;
    }

    .section-header {
      margin-bottom: 3rem;
      padding-left: 1rem;
    }

    .section-header h2 {
      font-size: 2rem;
    }

    .section-header h2::after {
      width: 50px;
    }

    .section-header .subtitle {
      font-size: 1.125rem;
      margin-left: 1.5rem;
    }

    .info-box {
      padding: 1.75rem;
    }

    .content-paragraph p,
    .content-list li {
      font-size: 0.9375rem;
    }
  }

  /* Animation subtile */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .info-box {
    animation: fadeIn 0.5s ease-out;
  }

  /* Variante avec grille pour listes longues */
  @media (min-width: 768px) {
    .content-list:has(> :nth-child(6)) {
      grid-template-columns: repeat(2, 1fr);
      column-gap: 2rem;
    }
  }

  /* Style pour mise en évidence */
  .info-box::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 100%;
    background: linear-gradient(180deg, #3b82f6 0%, #60a5fa 100%);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .info-box:hover::before {
    opacity: 1;
  }
</style>