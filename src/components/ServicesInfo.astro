---
import ServicesCard from './ServicesCard.astro';

export interface Props {
  title: string;
  subtitle?: string;
  backgroundColor?: string;
  services?: Array<{
    title: string;
    shortTitle?: string;
    description: string;
    icon?: string;
    features?: string[];
    price?: string;
    slug?: string;
    href?: string;
    accent?: 'blue' | 'gray' | 'gold';
  }>;
  sections?: Array<{
    title: string;
    content: string;
    items?: string[];
    footer?: string;
  }>;
  categories?: Array<{
    badge: string;
    title: string;
    thresholds: Array<{ label: string; value: string; }>;
    requirementsTitle: string;
    requirements: string[];
  }>;
  highlight?: {
    title: string;
    content: string;
  };
  note?: string;
  lang?: 'fr' | 'en';
}

const { title, subtitle, backgroundColor, services, sections, categories, highlight, note, lang = 'fr' } = Astro.props;
---

<section id="services-list" aria-labelledby="services-list-title" class="services-section" style={backgroundColor ? `background-color: ${backgroundColor};` : ''}>
  <div class="container">
    <div class="section-header">
      <h2 id="services-list-title" class="section-title">{title}</h2>
      {subtitle && <p class="section-subtitle">{subtitle}</p>}
    </div>
    
    {/* Rendu pour les services cards */}
    {services && (
      <div class="services-grid">
        {services.map(service => (
          <ServicesCard 
            title={service.title}
            shortTitle={service.shortTitle}
            description={service.description}
            icon={service.icon}
            features={service.features}
            price={service.price}
            slug={service.slug}
            href={service.href}
            accent={service.accent}
          />
        ))}
      </div>
    )}
    
    {/* Rendu pour les sections d'information */}
    {sections && (
      <div class="info-grid">
        {sections.map(section => (
          <div class="info-box">
            <h3>{section.title}</h3>
            <p>{section.content}</p>
            {section.items && (
              <ul class="info-list">
                {section.items.map(item => (
                  <li>{item}</li>
                ))}
              </ul>
            )}
            {section.footer && (
              <p class="info-footer">{section.footer}</p>
            )}
          </div>
        ))}
      </div>
    )}
    
    {/* Rendu pour les catégories de taille */}
    {categories && (
      <div class="categories-grid">
        {categories.map(category => (
          <div class="category-card">
            <div class="category-header">
              <span class="category-badge">{category.badge}</span>
              <h3>{category.title}</h3>
            </div>
            <div class="thresholds">
              {category.thresholds.map(threshold => (
                <div class="threshold-item">
                  <span class="label">{threshold.label}</span>
                  <span class="value">{threshold.value}</span>
                </div>
              ))}
            </div>
            <div class="requirements">
              <h4>{category.requirementsTitle}</h4>
              <ul>
                {category.requirements.map(req => (
                  <li>{req}</li>
                ))}
              </ul>
            </div>
          </div>
        ))}
      </div>
    )}
    
    {/* Section highlight */}
    {highlight && (
      <div class="highlight-box">
        <h3>{highlight.title}</h3>
        <p>{highlight.content}</p>
      </div>
    )}
    
    {/* Note box */}
    {note && (
      <div class="note-box">
        <p>{note}</p>
      </div>
    )}
  </div>
</section>

<style>
  .services-section {
    padding: 6rem 0;
    position: relative;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .section-header {
    text-align: left;
    max-width: 800px;
    margin: 0 auto 3.5rem auto;
    padding-left: 2rem;
  }

  .section-title {
    font-size: 2.5rem;
    font-weight: 300;
    margin-bottom: 1rem;
    color: #0f172a;
    letter-spacing: -0.02em;
    line-height: 1.2;
    position: relative;
    padding-bottom: 1.5rem;
  }
  
  .section-title::after {
    content: '';
    display: block;
    width: 60px;
    height: 2px;
    background: #3b82f6;
    margin: 1.5rem 0 0;
    position: absolute;
    bottom: 0;
    left: 0;
    transform: none;
  }

  .section-subtitle {
    font-size: 1.25rem;
    color: #64748b;
    line-height: 1.75;
    font-weight: 400;
    margin: 1rem 0 0 2.5rem;
    position: relative;
  }

  .services-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  /* Styles pour les sections d'information */
  .info-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin-bottom: 2rem;
  }

  .info-box {
    background: #fafbfc;
    border: 1px solid #e2e8f0;
    border-radius: 4px;
    padding: 2rem;
  }

  .info-box h3 {
    color: #0f172a;
    font-size: 1.375rem;
    font-weight: 600;
    margin-bottom: 1rem;
  }

  .info-box p {
    color: #64748b;
    line-height: 1.7;
    margin-bottom: 1rem;
  }

  .info-list {
    list-style: none;
    padding: 0;
    margin: 1rem 0;
  }

  .info-list li {
    position: relative;
    padding-left: 1.75rem;
    margin-bottom: 0.75rem;
    color: #64748b;
    line-height: 1.6;
  }

  .info-list li::before {
    content: "•";
    position: absolute;
    left: 0;
    color: #3b82f6;
    font-weight: bold;
    font-size: 1.25rem;
  }

  .info-footer {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid #e2e8f0;
    font-size: 0.95rem;
    color: #64748b;
    font-style: italic;
  }

  /* Section highlight */
  .highlight-box {
    background: #ffffff;
    border-left: 4px solid #3b82f6;
    border-radius: 4px;
    padding: 1.5rem;
    margin-top: 2rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
  }

  .highlight-box h3 {
    color: #0f172a;
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
  }

  .highlight-box p {
    color: #64748b;
    line-height: 1.7;
    margin: 0;
  }
  
  /* Categories Grid */
  .categories-grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    margin-bottom: 2rem;
  }

  .category-card {
    background: #ffffff;
    border-radius: 4px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .category-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);
  }

  .category-header {
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    padding: 1.5rem;
    text-align: center;
    border-bottom: 1px solid #e2e8f0;
  }

  .category-badge {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    background: #3b82f6;
    color: white;
    font-size: 0.75rem;
    font-weight: 600;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    border-radius: 4px;
    margin-bottom: 0.75rem;
  }

  .category-card:nth-child(2) .category-badge {
    background: #8b5cf6;
  }

  .category-card:nth-child(3) .category-badge {
    background: #10b981;
  }

  .category-header h3 {
    color: #0f172a;
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0;
  }

  .thresholds {
    padding: 1.5rem;
    background: #fafbfc;
    border-bottom: 1px solid #e2e8f0;
  }

  .threshold-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0;
  }

  .threshold-item:not(:last-child) {
    border-bottom: 1px solid #e2e8f0;
  }

  .threshold-item .label {
    color: #64748b;
    font-size: 0.875rem;
  }

  .threshold-item .value {
    color: #0f172a;
    font-weight: 600;
    font-size: 0.9375rem;
  }

  .requirements {
    padding: 1.5rem;
  }

  .requirements h4 {
    color: #0f172a;
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 1rem;
  }

  .requirements ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .requirements li {
    position: relative;
    padding-left: 1.5rem;
    margin-bottom: 0.5rem;
    color: #64748b;
    font-size: 0.875rem;
    line-height: 1.5;
  }

  .requirements li::before {
    content: "✓";
    position: absolute;
    left: 0;
    color: #10b981;
    font-weight: bold;
  }

  /* Note box */
  .note-box {
    background: #fef3c7;
    border-left: 4px solid #f59e0b;
    border-radius: 4px;
    padding: 1.25rem;
    margin-top: 2rem;
  }

  .note-box p {
    color: #92400e;
    margin: 0;
    font-size: 0.9375rem;
    line-height: 1.6;
  }

  /* Responsive */
  @media (max-width: 968px) {
    .info-grid {
      grid-template-columns: 1fr;
    }
    
    .categories-grid {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 768px) {
    .services-section {
      padding: 3rem 0;
    }
    
    .section-header {
      margin-bottom: 2.5rem;
      padding-left: 1rem;
    }
    
    .section-title {
      font-size: 2rem;
    }
    
    .section-subtitle {
      font-size: 1.125rem;
      margin-left: 1.5rem;
    }

    .services-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }
    
    .info-box {
      padding: 1.5rem;
    }
    
    .highlight-box {
      padding: 1.25rem;
    }
  }
</style>