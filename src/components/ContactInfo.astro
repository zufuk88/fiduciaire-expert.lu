---
export interface Props {
  lang?: 'fr' | 'en';
}
const { lang = 'fr' } = Astro.props;
const translations = {
  fr: {
    phone: "Téléphone",
    phoneSubtitle: "Réponse immédiate",
    email: "E-mail", 
    emailSubtitle: "Réponse sous 48h",
    office: "Bureau",
    officeSubtitle: "Centre-ville",
    hours: "Horaires",
    hoursWeekday: "Lun - Ven: 08h30 - 18h00",
    hoursWeekend: "Weekend: Fermé"
  },
  en: {
    phone: "Phone",
    phoneSubtitle: "Immediate response",
    email: "Email",
    emailSubtitle: "Response within 48h",
    office: "Office",
    officeSubtitle: "City center",
    hours: "Opening hours",
    hoursWeekday: "Mon-Fri: 08:30 - 18:00",
    hoursWeekend: "Weekend: Closed"
  }
};
const t = translations[lang];
// Contact data
const contactData = {
  phone: "+352 20 60 58 57",
  phoneClean: "+35220605857",
  email: "contact@fiduciaire-expert.lu",
  address: "15 Avenue de la Liberté",
  city: "L-1931 Luxembourg",
  mapUrl: "https://www.google.com/maps/search/?api=1&query=15+Avenue+de+la+Liberté+L-1931+Luxembourg"
};
---
<div class="contact-info">
  <!-- Téléphone -->
  <a href={`tel:${contactData.phoneClean}`} class="contact-item">
    <div class="item-icon">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
      </svg>
    </div>
    <div class="item-content">
      <h3>{t.phone}</h3>
      <p class="item-value">{contactData.phone}</p>
      <p class="item-subtitle">{t.phoneSubtitle}</p>
    </div>
  </a>
  <!-- Email -->
  <a href={`mailto:${contactData.email}`} class="contact-item">
    <div class="item-icon">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
        <polyline points="22,6 12,13 2,6"/>
      </svg>
    </div>
    <div class="item-content">
      <h3>{t.email}</h3>
      <p class="item-value">{contactData.email}</p>
      <p class="item-subtitle">{t.emailSubtitle}</p>
    </div>
  </a>
  <!-- Adresse -->
  <a href={contactData.mapUrl} target="_blank" rel="noopener noreferrer" class="contact-item">
    <div class="item-icon">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/>
        <circle cx="12" cy="10" r="3"/>
      </svg>
    </div>
    <div class="item-content">
      <h3>{t.office}</h3>
      <p class="item-value">
        {contactData.address}<br/>
        {contactData.city}
      </p>
      <p class="item-subtitle">{t.officeSubtitle}</p>
    </div>
  </a>
  <!-- Horaires -->
  <div class="contact-item contact-item--static">
    <div class="item-icon">
      <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <circle cx="12" cy="12" r="10"/>
        <polyline points="12 6 12 12 16 14"/>
      </svg>
    </div>
    <div class="item-content">
      <h3>{t.hours}</h3>
      <p class="item-value">{t.hoursWeekday}</p>
      <p class="item-subtitle">{t.hoursWeekend}</p>
    </div>
  </div>
</div>
<style>
  .contact-info {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
    width: 100%;
  }
  
  .contact-item {
    display: flex;
    align-items: flex-start;
    gap: 1.25rem;
    padding: 1.5rem;
    background: linear-gradient(180deg, #ffffff 0%, #fafbfc 100%);
    border: 1px solid transparent;
    border-radius: 12px;
    text-decoration: none;
    color: inherit;
    position: relative;
    overflow: hidden;
    box-shadow: 0 4px 20px -4px rgba(0, 0, 0, 0.08);
    transition: opacity 0.2s ease;
  }
  
  /* Accent bar at top */
  .contact-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, #3b82f6, #60a5fa);
    opacity: 0;
    transition: opacity 0.2s ease;
  }
  
  .contact-item:hover:not(.contact-item--static) {
    box-shadow: 0 8px 30px -8px rgba(0, 0, 0, 0.12);
    border-color: #e2e8f0;
    background: #ffffff;
  }
  
  .contact-item:hover:not(.contact-item--static)::before {
    opacity: 1;
  }
  
  .contact-item--static {
    cursor: default;
  }
  
  .item-icon {
    flex-shrink: 0;
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(96, 165, 250, 0.05));
    border-radius: 10px;
    transition: opacity 0.2s ease;
  }
  
  .contact-item:hover:not(.contact-item--static) .item-icon {
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.15), rgba(96, 165, 250, 0.08));
  }
  
  .item-icon svg {
    width: 22px;
    height: 22px;
    color: #3b82f6;
    stroke-width: 1.5;
  }
  
  .item-content {
    flex: 1;
    min-width: 0;
  }
  
  .item-content h3 {
    font-size: 0.75rem;
    font-weight: 600;
    color: #94a3b8;
    margin: 0 0 0.375rem 0;
    text-transform: uppercase;
    letter-spacing: 0.075em;
  }
  
  .item-value {
    font-size: 1.0625rem;
    font-weight: 600;
    color: #0f172a;
    margin: 0 0 0.375rem 0;
    line-height: 1.4;
    word-break: break-word;
    letter-spacing: -0.01em;
  }
  
  .contact-item:hover:not(.contact-item--static) .item-value {
    color: #3b82f6;
  }
  
  .item-subtitle {
    font-size: 0.875rem;
    color: #64748b;
    margin: 0;
    font-weight: 400;
  }
  
  /* Mobile - Responsive adjustments */
  @media (max-width: 768px) {
    .contact-info {
      gap: 1rem;
    }
    
    .contact-item {
      padding: 1.25rem;
      gap: 1rem;
    }
    
    .item-icon {
      width: 40px;
      height: 40px;
    }
    
    .item-icon svg {
      width: 20px;
      height: 20px;
    }
    
    .item-value {
      font-size: 1rem;
    }
    
    .item-subtitle {
      font-size: 0.8125rem;
    }
  }
</style>