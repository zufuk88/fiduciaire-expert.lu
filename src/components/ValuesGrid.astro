---
export interface Props {
  title: string;
  subtitle?: string;
  values: Array<{
    title: string;
    description: string;
    icon: string;
  }>;
  backgroundColor?: string;
}

const { title, subtitle, values, backgroundColor } = Astro.props;
---

<section class="values-section" aria-labelledby="values-title" style={backgroundColor ? `background-color: ${backgroundColor};` : ''}>
  <div class="container">
    <div class="section-header">
      <h2 id="values-title">{title}</h2>
      {subtitle && <p class="section-subtitle">{subtitle}</p>}
    </div>
    
    <div class="values-grid">
      {values.map(value => (
        <article class="value-card">
          <div class="value-icon" set:html={value.icon} />
          <h3 class="value-title">{value.title}</h3>
          <p class="value-description">{value.description}</p>
        </article>
      ))}
    </div>
  </div>
</section>

<style>
  .values-section {
    padding: 6rem 0;
    position: relative;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .section-header {
    text-align: left;
    margin-bottom: 4rem;
    position: relative;
    z-index: 1;
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
    padding-left: 2rem;
  }

  .section-header h2 {
    font-size: 2.5rem;
    font-weight: 300;
    color: #0f172a;
    margin-bottom: 1rem;
    letter-spacing: -0.02em;
    line-height: 1.2;
    position: relative;
    padding-bottom: 1.5rem;
  }
  
  .section-header h2::after {
    content: '';
    display: block;
    width: 60px;
    height: 2px;
    background: #3b82f6;
    margin: 1.5rem 0 0;
    position: absolute;
    bottom: 0;
    left: 0;
    transform: none;
  }

  .section-subtitle {
    font-size: 1.25rem;
    color: #64748b;
    line-height: 1.75;
    max-width: 600px;
    margin: 1rem 0 0 2.5rem;
    font-weight: 400;
    position: relative;
  }

  .values-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    position: relative;
    z-index: 1;
  }

  /* Value Cards */
  .value-card {
    background: #ffffff;
    border: 1px solid #e2e8f0;
    border-radius: 4px;
    padding: 2rem;
    text-align: center;
    
    position: relative;
    overflow: hidden;
  }

  .value-card:hover {
    
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
    border-color: #cbd5e1;
  }

  /* Icon */
  .value-icon {
    width: 64px;
    height: 64px;
    margin: 0 auto 1.5rem;
    color: #3b82f6;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #eff6ff;
    border-radius: 4px;
    
  }

  .value-icon :global(svg) {
    width: 32px;
    height: 32px;
  }

  .value-card:hover .value-icon {
    background: #dbeafe;
  }

  /* Title */
  .value-title {
    font-size: 1rem;
    font-weight: 600;
    color: #0f172a;
    margin: 0 0 1rem 0;
    line-height: 1.3;
  }

  /* Description */
  .value-description {
    color: #64748b;
    line-height: 1.6;
    margin: 0;
    font-size: 0.9375rem;
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .values-grid {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 768px) {
    .values-section {
      padding: 4rem 0;
    }

    .section-header {
      margin-bottom: 3rem;
      padding-left: 1rem;
    }

    .section-header h2 {
      font-size: 2rem;
    }
    
    .section-subtitle {
      font-size: 1.125rem;
      margin-left: 1.5rem;
    }

    .value-card {
      padding: 1.5rem;
    }

    .value-icon {
      width: 56px;
      height: 56px;
    }

    .value-title {
      font-size: 1rem;
    }

    .value-description {
      font-size: 0.875rem;
    }
  }
</style>