---
export interface Props {
  breadcrumbItems: Array<{ text: string; href?: string }>;
  title: string;
  subtitle?: string;
}

const { breadcrumbItems = [], title, subtitle } = Astro.props;
const items = [...breadcrumbItems, { text: title }];
---

<nav class="breadcrumbs" aria-label="Fil d'Ariane">
  <div class="container">
    <ol>
      {items.map((item, i) => {
        const last = i === items.length - 1;
        return (
          <li>
            {last ? (
              <h1 class="current" aria-current="page">{item.text}</h1>
            ) : (
              <a href={item.href} class="link">{item.text}</a>
            )}
          </li>
        );
      })}
    </ol>
  </div>
</nav>

{subtitle && (
  <section class="subtitle">
    <div class="container">
      <p>{subtitle}</p>
    </div>
  </section>
)}

<style>
  :root {
    --header-h: 72px; /* CORRIGÉ: hauteur réelle du header (72px au lieu de 64px) */
    --bg: rgba(30, 41, 59, 0.95);
    --fg: #fff;
    --fg-dim: rgba(255, 255, 255, 0.7);
    --container: 1280px;
    --pad-x: 2rem;
    --pad-y: 0.5rem;
  }

  @media (max-width: 768px) {
    :root { --header-h: 72px; --pad-x: 1rem; --pad-y: 0.375rem; }
  }

  .container {
    max-width: var(--container);
    margin-inline: auto;
    padding-inline: var(--pad-x);
  }

  /* Sticky bar - avec z-index inférieur au header pour éviter le chevauchement */
  .breadcrumbs {
    position: sticky;
    top: var(--header-h); /* Se positionne exactement sous le header de 72px */
    z-index: 999; /* Juste en dessous du header qui a z-index: 1000 */
    backdrop-filter: blur(12px);
    background: var(--bg);
    box-shadow: 0 2px 20px rgba(30, 41, 59, 0.15);
  }

  .breadcrumbs .container {
    display: flex;
    align-items: center;
    padding-block: var(--pad-y);
  }

  /* List */
  ol {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    list-style: none;
    padding: 0;
    margin: 0;
    font-size: 0.875rem;
    line-height: 1;
  }

  li { display: flex; align-items: center; }

  /* Separator */
  li + li::before {
    content: "›";
    margin: 0 0.25rem;
    color: var(--fg-dim);
  }

  /* Links */
  .link {
    display: inline-block;
    padding: 0.375rem 0.75rem;
    text-decoration: none;
    border-radius: 4px;
    color: rgba(255, 255, 255, 0.9);
    font-weight: 500;
    position: relative;
    z-index: 1;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  .link:hover { 
    background: rgba(255, 255, 255, 0.95); 
    color: #2c4157; 
    transform: translateY(-1px);
  }

  /* Current */
  .current {
    margin: 0;
    padding: 0.375rem 0.75rem;
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--fg);
  }

  /* Subtitle */
  .subtitle {
    padding-block: 3rem;
    background: linear-gradient(135deg, #f0f9ff 0%, #ffffff 100%);
    border-top: 2px solid #3b82f6;
    border-bottom: 1px solid #e2e8f0;
  }
  .subtitle p {
    margin: 0;
    font-size: 1.25rem;
    line-height: 1.8;
    color: #334155;
    font-weight: 300;
  }

  /* Mobile */
  @media (max-width: 768px) {
    ol { font-size: 0.75rem; }
    .link, .current { padding: 0.25rem 0.5rem; }
    .subtitle { padding-block: 2rem; }
    .subtitle p { font-size: 1.125rem; }
  }
</style>