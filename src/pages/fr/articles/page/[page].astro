---
import { getCollection } from 'astro:content';
import LayoutI18n from '../../../../layouts/LayoutI18n.astro';
import SearchBar from '../../../../components/SearchBar.astro';
import StickyPageTop from '../../../../components/StickyPageTop.astro';
import BlogCarousel from '../../../../components/BlogCarousel.astro';
import '../../../../styles/blog-articles.css';
export async function getStaticPaths() {
  const POSTS_PER_PAGE = 9;
  const allPosts = await getCollection('blog');
  const frenchCategories = ['Fiscalité', 'Social', 'Comptabilité', 'Juridique'];
  const frenchPosts = allPosts.filter(post => frenchCategories.includes(post.data.category) && post.data.draft !== true);
  const sortedPosts = frenchPosts.sort((a, b) => {
    const dateA = new Date(a.data.modified || a.data.date).getTime();
    const dateB = new Date(b.data.modified || b.data.date).getTime();
    return dateB - dateA;
  });
  // Calcul du nombre total de pages
  // Chaque page affiche POSTS_PER_PAGE articles
  const totalPages = Math.max(1, Math.ceil(sortedPosts.length / POSTS_PER_PAGE));
  // Générer les paths pour chaque page additionnelle
  const paths = [];
  for (let page = 2; page <= totalPages; page++) {
    const startIndex = (page - 1) * POSTS_PER_PAGE; // Page 2 commence à l'index 9
    const endIndex = startIndex + POSTS_PER_PAGE;
    const pagePosts = sortedPosts.slice(startIndex, endIndex);
    // Générer seulement si il y a des articles pour cette page
    if (pagePosts.length > 0) {
      paths.push({
        params: { page: page.toString() },
        props: {
          posts: pagePosts,
          currentPage: page,
          totalPages,
          allPostsCount: sortedPosts.length
        }
      });
    }
  }
  return paths;
}
const { posts, currentPage, totalPages, allPostsCount } = Astro.props;
const frenchCategories = ['Fiscalité', 'Social', 'Comptabilité', 'Juridique'];
const categories = frenchCategories;
const formatDate = (date) => date.toLocaleDateString('fr-FR', {
  year: 'numeric', month: 'long', day: 'numeric'
});
// URLs pour rel prev/next
const siteUrl = Astro.site ? Astro.site.origin : "https://www.fiduciaire-expert.lu";
const prevUrl = currentPage === 2 ? '/fr/articles' : `/fr/articles/page/${currentPage - 1}`;
const nextUrl = currentPage < totalPages ? `/fr/articles/page/${currentPage + 1}` : null;
const canonicalUrl = `${siteUrl}/fr/articles/page/${currentPage}`;
// Schema pour le SEO
const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [
    {
      "@type": "ListItem",
      "position": 1,
      "name": "Accueil",
      "item": siteUrl
    },
    {
      "@type": "ListItem",
      "position": 2,
      "name": "Blog",
      "item": `${siteUrl}/fr/articles`
    },
    {
      "@type": "ListItem",
      "position": 3,
      "name": `Page ${currentPage}`
    }
  ]
};
---
<LayoutI18n
  title={`Blog - Page ${currentPage} | Conseils en Comptabilité & Fiscalité | Fiduciaire Expert Luxembourg`}
  description={`Page ${currentPage} - Retrouvez nos ${allPostsCount} articles d'experts sur la comptabilité, la fiscalité et la création d'entreprise au Luxembourg.`}
  canonical={canonicalUrl}
  schema={breadcrumbSchema}
>
  <!-- Balises link pour prev/next SEO -->
  <Fragment slot="head">
    <link rel="prev" href={prevUrl} />
    {nextUrl && <link rel="next" href={nextUrl} />}
  </Fragment>
  <StickyPageTop
    breadcrumbItems={[
      { text: "Accueil", href: "/fr" },
      { text: "Blog", href: "/fr/articles" },
      { text: `Page ${currentPage}` }
    ]}
    title="Nos derniers articles de blog"
    subtitle={`Page ${currentPage} sur ${totalPages} - Consultez nos analyses et conseils d'experts pour rester informé sur la comptabilité, la fiscalité, le payroll et le droit des sociétés au Luxembourg.`}
  />
  <section class="blog-main-section">
    <div class="container blog-layout">
      <div class="posts-column">
        <h2 class="section-title">Tous les articles - Page {currentPage}</h2>
        <BlogCarousel 
          title="" 
          variant="grid" 
          showAll={false}
          showTitle={false}
          showCTA={false}
          columns={2}
          posts={posts}
          lang="fr"
        />
        {/* Pagination avec rel prev/next */}
        <div class="pagination">
          {currentPage === 2 ? (
            <a href="/fr/articles" rel="prev" class="pagination-prev">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M15 18l-6-6 6-6" />
              </svg>
              Articles précédents
            </a>
          ) : (
            <a href={`/fr/articles/page/${currentPage - 1}`} rel="prev" class="pagination-prev">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M15 18l-6-6 6-6" />
              </svg>
              Articles précédents
            </a>
          )}
          <span class="pagination-info">
            Page {currentPage} sur {totalPages}
          </span>
          {nextUrl ? (
            <a href={nextUrl} rel="next" class="pagination-next">
              Articles suivants
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M9 18l6-6-6-6" />
              </svg>
            </a>
          ) : (
            <span class="pagination-disabled">Fin des articles</span>
          )}
        </div>
      </div>
      <aside class="sidebar-column">
        <div class="sidebar-widget">
          <h3 class="widget-title">Catégories</h3>
          <nav class="category-nav">
            <a href="/fr/articles" class="category-link">Toutes les catégories</a>
            {categories.map(cat => {
              const slug = cat.toLowerCase().replace(/\s+/g, '-').replace(/'/g, '-');
              return <a href={`/fr/articles/category/${slug}`} class="category-link">{cat}</a>;
            })}
          </nav>
        </div>
        <div class="sidebar-widget sidebar-search">
          <h3 class="widget-title">Rechercher</h3>
          <SearchBar placeholder="Rechercher" lang="fr" />
        </div>
      </aside>
    </div>
  </section>
</LayoutI18n>
<style>
  /* Styles supplémentaires pour pagination disabled */
  .pagination-disabled {
    padding: 0.75rem 1.5rem;
    color: #94a3b8;
    font-weight: 500;
    cursor: not-allowed;
  }
</style>