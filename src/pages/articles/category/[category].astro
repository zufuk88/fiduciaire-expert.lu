---
// src/pages/articles/category/[category].astro

import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
// NOUVEAU : Importation du composant Image
import { Image } from 'astro:assets';

// 1. Génère une page pour chaque catégorie en utilisant getCollection (inchangé)
export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  const uniqueCategories = [...new Set(allPosts.map((post) => post.data.category).filter(Boolean))];

  return uniqueCategories.map((category) => {
    const slug = category.toLowerCase().replace(/\s+/g, '-').replace(/'/g, '-');
    return {
      params: { category: slug },
      props: { categoryName: category },
    };
  });
}

const { category } = Astro.params;
const { categoryName } = Astro.props;

// 2. Filtre les articles de la bonne catégorie (inchangé)
const allPosts = await getCollection('blog');
const filteredPosts = allPosts.filter(post => {
  const postCategorySlug = post.data.category?.toLowerCase().replace(/\s+/g, '-').replace(/'/g, '-');
  return postCategorySlug === category;
}).sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

// Helper (inchangé)
const formatDate = (date) => date.toLocaleDateString('fr-FR', {
  year: 'numeric', month: 'long', day: 'numeric'
});
---

<Layout
  title={`Catégorie : ${categoryName} | Blog Fiduciaire Expert`}
  description={`Retrouvez tous nos articles sur le thème "${categoryName}" et bénéficiez de nos conseils d'experts.`}
>
  <section class="page-hero">
    <div class="container">
      <p class="breadcrumb">
        <a href="/">Accueil</a> / <a href="/articles">Blog</a> / <span>{categoryName}</span>
      </p>
      <h1>Catégorie : {categoryName}</h1>
      <p class="hero-subtitle">
        {filteredPosts.length} article{filteredPosts.length > 1 ? 's' : ''} trouvé{filteredPosts.length > 1 ? 's' : ''} sur ce sujet.
      </p>
    </div>
  </section>

  <section class="category-posts-section">
    <div class="container">
      <div class="posts-grid">
        {filteredPosts.map(post => (
          <article class="post-card">
            <a href={`/articles/${post.slug}`} class="post-link">
              {post.data.image && (
                <div class="post-image-wrapper">
                  {/* MODIFIÉ : Utilisation du composant Image optimisé */}
                  <Image src={post.data.image} alt={post.data.title} width="400" height="200" loading="lazy" quality="mid" />
                </div>
              )}
              <div class="post-content">
                <p class="post-meta">
                   {/* On ajoute la catégorie ici pour être cohérent avec l'index */}
                  <span class="category-badge">{post.data.category}</span>
                  <time datetime={post.data.date.toISOString()}>{formatDate(post.data.date)}</time>
                </p>
                <h4 class="post-title">{post.data.title}</h4>
                <p class="post-excerpt">{post.data.description}</p>
              </div>
            </a>
          </article>
        ))}
      </div>
    </div>
  </section>
</Layout>

<style>
  /* ===== STYLE COHÉRENT AVEC INDEX ===== */
  
  /* Section Héros - Style élégant avec gradient subtil */
  .page-hero {
    background: linear-gradient(135deg, var(--color-background) 0%, #f0f4f8 100%);
    padding: var(--spacing-xl) 0;
    text-align: center;
    position: relative;
    overflow: hidden;
  }
  
  .page-hero::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -20%;
    width: 60%;
    height: 200%;
    background: radial-gradient(circle, rgba(0, 95, 204, 0.05) 0%, transparent 70%);
    pointer-events: none;
  }
  
  .page-hero .container {
    position: relative;
    z-index: 1;
  }
  
  .breadcrumb {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    margin-bottom: 1.5rem;
    display: inline-block;
    padding: 0.5rem 1rem;
    background-color: rgba(0, 95, 204, 0.08);
    border: 1px solid rgba(0, 95, 204, 0.2);
    border-radius: 24px;
  }
  
  .breadcrumb a {
    color: var(--color-primary);
    font-weight: 500;
  }
  
  .breadcrumb a:hover {
    text-decoration: underline;
  }
  
  .page-hero h1 {
    margin-bottom: 1.5rem;
    font-size: clamp(2rem, 5vw, 3rem);
    background: linear-gradient(135deg, var(--color-dark) 0%, var(--color-primary) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .hero-subtitle {
    font-size: var(--font-size-xl);
    color: var(--color-text-secondary);
    max-width: 720px;
    margin: 0 auto;
    line-height: 1.7;
  }

  /* Section Articles de la Catégorie */
  .category-posts-section {
    padding: var(--spacing-xl) 0;
    background-color: var(--color-background);
  }

  /* Grille des Articles - Cartes modernes */
  .posts-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
  }
  
  .post-card {
    background-color: var(--color-background);
    border: 1px solid rgba(222, 226, 230, 0.5);
    border-radius: 12px;
    overflow: hidden;
    transition: all 0.3s ease;
    position: relative;
  }
  
  .post-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, var(--color-primary) 0%, #0047a3 100%);
    transform: translateX(-100%);
    transition: transform 0.3s ease;
  }
  
  .post-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.08);
    border-color: transparent;
  }
  
  .post-card:hover::before {
    transform: translateX(0);
  }
  
  .post-link {
    text-decoration: none;
    color: inherit;
    display: block;
  }
  
  .post-image-wrapper {
    overflow: hidden;
    background-color: var(--color-background-alt);
  }
  
  .post-image-wrapper img {
    width: 100%;
    height: 220px;
    object-fit: cover;
    display: block;
    transition: transform 0.3s ease;
  }
  
  .post-card:hover .post-image-wrapper img {
    transform: scale(1.05);
  }
  
  .post-content {
    padding: 2rem;
  }
  
  .post-meta {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
    color: var(--color-text-secondary);
    font-size: 0.875rem;
  }
  
  .category-badge {
    background: linear-gradient(135deg, var(--color-primary) 0%, #0047a3 100%);
    color: var(--color-background);
    padding: 0.375rem 1rem;
    font-size: 0.8rem;
    font-weight: 600;
    border-radius: 20px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
  
  .post-title {
    font-size: 1.375rem;
    margin-bottom: 1rem;
    line-height: 1.3;
    color: var(--color-dark);
    transition: color 0.2s ease;
  }
  
  .post-card:hover .post-title {
    color: var(--color-primary);
  }
  
  .post-excerpt {
    color: var(--color-text-secondary);
    line-height: 1.7;
  }

  /* Animations subtiles */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .post-card {
    animation: fadeInUp 0.6s ease-out;
    animation-fill-mode: both;
  }
  
  .post-card:nth-child(1) { animation-delay: 0.1s; }
  .post-card:nth-child(2) { animation-delay: 0.15s; }
  .post-card:nth-child(3) { animation-delay: 0.2s; }
  .post-card:nth-child(4) { animation-delay: 0.25s; }
  .post-card:nth-child(5) { animation-delay: 0.3s; }
  .post-card:nth-child(6) { animation-delay: 0.35s; }

  /* Responsive */
  @media (min-width: 768px) {
    .posts-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (min-width: 1024px) {
    .posts-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>